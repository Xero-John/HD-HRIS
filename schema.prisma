generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model cache {
  key        String @id @db.VarChar(255)
  value      String
  expiration Int
}

model cache_locks {
  key        String @id @db.VarChar(255)
  owner      String @db.VarChar(255)
  expiration Int
}

model employees {
  employee_id Int      @id
  firstname   String   @db.VarChar(255)
  lastname    String   @db.VarChar(255)
  created_at  DateTime @db.Timestamp(6)
  updated_at  DateTime @db.Timestamp(6)
}

model migrations {
  id        Int    @id
  migration String @db.VarChar(255)
  batch     Int
}

model password_reset_tokens {
  email      String    @id @db.VarChar(255)
  token      String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(6)
}

model ref_addresses {
  address_code                                                  Int               @id
  address_name                                                  String
  parent_code                                                   Int?
  trans_employees_trans_employees_addr_regionToref_addresses    trans_employees[] @relation("trans_employees_addr_regionToref_addresses")
  trans_employees_trans_employees_addr_provinceToref_addresses  trans_employees[] @relation("trans_employees_addr_provinceToref_addresses")
  trans_employees_trans_employees_addr_municipalToref_addresses trans_employees[] @relation("trans_employees_addr_municipalToref_addresses")
  trans_employees_trans_employees_addr_baranggayToref_addresses trans_employees[] @relation("trans_employees_addr_baranggayToref_addresses")
}

model ref_attendance_sessions {
  attendance_session_id Int                 @id
  session               String              @db.VarChar(10)
  trans_attendances     trans_attendances[]
}

model ref_departments {
  department_id   Int               @id
  department_name String            @db.VarChar(45)
  color           String?           @db.VarChar(45)
  isactive        String            @default("1") @db.Bit(1)
  created_at      DateTime          @db.Timestamp(6)
  updated_at      DateTime          @db.Timestamp(6)
  deleted_at      DateTime?         @db.Timestamp(6)
  trans_employees trans_employees[]
}

model ref_employee_working_types {
  employee_working_type_id Int               @id
  working_type             String            @db.VarChar(45)
  isactive                 String            @default("1") @db.Bit(1)
  trans_employees          trans_employees[]
}

model ref_genders {
  gender_id       Int               @id
  gender_name     String            @db.VarChar(10)
  trans_employees trans_employees[]
}

model ref_job_classes {
  job_id          Int               @id
  job_title       String?           @db.VarChar(45)
  trans_employees trans_employees[]
}

model ref_leave_types {
  leave_type_id   Int            @id
  leave_type_name String         @db.VarChar(45)
  duration_days   Int?
  isactive        String?        @default("1") @db.Bit(1)
  created_at      DateTime       @db.Timestamp(6)
  updated_at      DateTime       @db.Timestamp(6)
  deleted_at      DateTime?      @db.Timestamp(6)
  trans_leaves    trans_leaves[]
}

model ref_payhead_type {
  payhead_type_id    Int                  @id
  payhead_type_name  String               @db.VarChar(45)
  trans_payhead_list trans_payhead_list[]
}

model sessions {
  id            String  @id @db.VarChar(255)
  user_id       BigInt?
  ip_address    String? @db.VarChar(45)
  user_agent    String?
  payload       String
  last_activity Int

  @@index([last_activity], map: "sessions_last_activity_index")
  @@index([user_id], map: "sessions_user_id_index")
}

model trans_accounts {
  account_id       Int                @id
  employee_id      Int
  username         String             @db.VarChar(45)
  password         String             @db.VarChar(45)
  isactive         String             @default("1") @db.Bit(1)
  isadmin          String             @default("0") @db.Bit(1)
  trans_employees  trans_employees    @relation(fields: [employee_id], references: [employee_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_accounts_employees1")
  trans_privileges trans_privileges[]

  @@index([employee_id], map: "fk_accounts_employees1_idx")
}

model trans_attendance_details {
  attendance_id     Int               @id
  shift_len         DateTime?         @db.Time(6)
  under_time        DateTime?         @db.Time(6)
  late_duration     DateTime?         @db.Time(6)
  status            String?           @db.VarChar(45)
  trans_attendances trans_attendances @relation(fields: [attendance_id], references: [attendance_id], onDelete: NoAction, onUpdate: NoAction, map: "attendance_details_attendance_attendance_id_fk")
}

model trans_attendances {
  attendance_id            Int                       @id
  employee_id              Int
  date                     DateTime                  @db.Date
  time_in                  DateTime?                 @db.Time(6)
  time_out                 DateTime?                 @db.Time(6)
  attendance_session_id    Int
  trans_attendance_details trans_attendance_details?
  trans_employees          trans_employees           @relation(fields: [employee_id], references: [employee_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_attendance_employees1")
  ref_attendance_sessions  ref_attendance_sessions   @relation(fields: [attendance_session_id], references: [attendance_session_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_trans_attendances_ref_attendance_sessions1")

  @@index([employee_id], map: "fk_attendance_employees1_idx")
  @@index([attendance_session_id], map: "fk_trans_attendances_ref_attendance_sessions1_idx")
}

model trans_employees {
  employee_id                                                 Int                        @id
  rfid                                                        Int?                       @unique(map: "trans_employees_pk")
  picture                                                     String?
  first_name                                                  String                     @db.VarChar(45)
  last_name                                                   String                     @db.VarChar(45)
  middle_name                                                 String?                    @db.VarChar(45)
  suffix                                                      String?                    @db.VarChar(5)
  email                                                       String?                    @db.VarChar(45)
  phone_no                                                    String?                    @db.VarChar(45)
  birthdate                                                   DateTime?                  @db.Date
  job_id                                                      Int
  status_                                                     String?                    @db.VarChar(10)
  department_id                                               Int
  gender_id                                                   Int
  ishead                                                      String                     @default("0") @db.Bit(1)
  isassistant                                                 String                     @default("0") @db.Bit(1)
  working_type_id                                             Int
  addr_region                                                 Int
  addr_province                                               Int
  addr_municipal                                              Int
  addr_baranggay                                              Int
  created_at                                                  DateTime                   @db.Timestamp(6)
  updated_at                                                  DateTime?                  @db.Timestamp(6)
  deleted_at                                                  DateTime?                  @db.Timestamp(6)
  trans_accounts                                              trans_accounts[]
  trans_attendances                                           trans_attendances[]
  ref_genders                                                 ref_genders                @relation(fields: [gender_id], references: [gender_id], onDelete: NoAction, onUpdate: NoAction, map: "employees_gender_fk")
  ref_departments                                             ref_departments            @relation(fields: [department_id], references: [department_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_employees_department1")
  ref_job_classes                                             ref_job_classes            @relation(fields: [job_id], references: [job_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_employees_job_class1")
  ref_addresses_trans_employees_addr_regionToref_addresses    ref_addresses              @relation("trans_employees_addr_regionToref_addresses", fields: [addr_region], references: [address_code], onDelete: NoAction, onUpdate: NoAction, map: "fk_trans_employees_ref_addresses1")
  ref_addresses_trans_employees_addr_provinceToref_addresses  ref_addresses              @relation("trans_employees_addr_provinceToref_addresses", fields: [addr_province], references: [address_code], onDelete: NoAction, onUpdate: NoAction, map: "fk_trans_employees_ref_addresses2")
  ref_addresses_trans_employees_addr_municipalToref_addresses ref_addresses              @relation("trans_employees_addr_municipalToref_addresses", fields: [addr_municipal], references: [address_code], onDelete: NoAction, onUpdate: NoAction, map: "fk_trans_employees_ref_addresses3")
  ref_addresses_trans_employees_addr_baranggayToref_addresses ref_addresses              @relation("trans_employees_addr_baranggayToref_addresses", fields: [addr_baranggay], references: [address_code], onDelete: NoAction, onUpdate: NoAction, map: "fk_trans_employees_ref_addresses4")
  ref_employee_working_types                                  ref_employee_working_types @relation(fields: [working_type_id], references: [employee_working_type_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_trans_employees_ref_employee_working_types1")
  trans_leaves                                                trans_leaves[]
  trans_notifications                                         trans_notifications[]
  trans_overtimes                                             trans_overtimes[]
  trans_payhead_affecteds                                     trans_payhead_affecteds[]
  trans_payrolls                                              trans_payrolls[]
  trans_schedules                                             trans_schedules[]
  trans_sessions                                              trans_sessions[]
  trans_units                                                 trans_units[]
  trans_variables                                             trans_variables[]

  @@index([department_id], map: "fk_employees_department1_idx")
  @@index([job_id], map: "fk_employees_job_class1_idx")
  @@index([addr_region], map: "fk_trans_employees_ref_addresses1_idx")
  @@index([addr_province], map: "fk_trans_employees_ref_addresses2_idx")
  @@index([addr_municipal], map: "fk_trans_employees_ref_addresses3_idx")
  @@index([addr_baranggay], map: "fk_trans_employees_ref_addresses4_idx")
  @@index([working_type_id], map: "fk_trans_employees_ref_employee_working_types1_idx")
}

model trans_leave_attachments {
  attachment_id Int          @id
  leave_id      Int
  attachment    String
  trans_leaves  trans_leaves @relation(fields: [leave_id], references: [leave_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_leave_attachment_leave1")

  @@index([leave_id], map: "fk_leave_attachment_leave1_idx")
}

model trans_leaves {
  leave_id                Int                       @id
  employee_id             Int
  leave_type_id           Int
  start_date              DateTime?                 @db.Date
  end_date                DateTime?                 @db.Date
  comment                 String?
  status                  String?                   @db.VarChar(8)
  created_at              DateTime                  @default(dbgenerated("'2024-06-02 00:41:35'::timestamp without time zone")) @db.Timestamp(6)
  updated_at              DateTime                  @default(dbgenerated("'2024-06-01 00:00:00'::timestamp without time zone")) @db.Timestamp(6)
  trans_leave_attachments trans_leave_attachments[]
  trans_employees         trans_employees           @relation(fields: [employee_id], references: [employee_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_leave_employees1")
  ref_leave_types         ref_leave_types           @relation(fields: [leave_type_id], references: [leave_type_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_leave_leave_type1")

  @@index([employee_id], map: "fk_leave_employees1_idx")
  @@index([leave_type_id], map: "fk_leave_leave_type1_idx")
}

model trans_notifications {
  notification_id Int             @id
  employee_id     Int
  content         String
  isseen          DateTime?       @db.Timestamp(6)
  isread          DateTime?       @db.Timestamp(6)
  created_at      DateTime        @db.Timestamp(6)
  deleted_at      DateTime?       @db.Timestamp(6)
  trans_employees trans_employees @relation(fields: [employee_id], references: [employee_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_notification_employees1")

  @@index([employee_id], map: "fk_notification_employees1_idx")
}

model trans_overtimes {
  overtime_id     Int             @id
  employee_id     Int
  start_date      DateTime?       @db.Date
  end_date        DateTime?       @db.Date
  duration_mins   Int
  status          String          @db.VarChar(45)
  created_at      DateTime        @db.Timestamp(6)
  updated_at      DateTime        @db.Timestamp(6)
  trans_employees trans_employees @relation(fields: [employee_id], references: [employee_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_overtime_employee_employee_id")

  @@index([employee_id], map: "fk_overtime_employee_employee_id_idx")
}

model trans_payhead_affecteds {
  payhead_affected_id Int                @id
  payhead_id          Int
  employee_id         Int
  trans_employees     trans_employees    @relation(fields: [employee_id], references: [employee_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_trans_payhead_affecteds_trans_employees1")
  trans_payhead_list  trans_payhead_list @relation(fields: [payhead_id], references: [payhead_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_trans_payhead_affecteds_trans_payhead_list1")

  @@index([employee_id], map: "fk_trans_payhead_affecteds_trans_employees1_idx")
  @@index([payhead_id], map: "fk_trans_payhead_affecteds_trans_payhead_list1_idx")
}

model trans_payhead_breakdowns {
  payhead_breakdown_id Int                @id
  payroll_id           Int
  payhead_id           Int
  amount               Decimal?           @db.Decimal(11, 2)
  trans_payhead_list   trans_payhead_list @relation(fields: [payhead_id], references: [payhead_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_trans_payhead_breakdowns_trans_payhead_list1")

  @@index([payhead_id], map: "fk_trans_payhead_breakdowns_trans_payhead_list1_idx")
  @@index([payroll_id], map: "fk_trans_payhead_breakdowns_trans_payrolls1_idx")
}

model trans_payhead_list {
  payhead_id               Int                        @id
  payhead_name             String                     @db.VarChar(45)
  payhead_type_id          Int
  calculation              String?                    @db.VarChar(45)
  isactive                 String                     @default("1") @db.Bit(1)
  ismandatory              String                     @default("0") @db.Bit(1)
  created_at               DateTime                   @db.Timestamp(6)
  updated_at               DateTime                   @db.Timestamp(6)
  deleted_at               DateTime?                  @db.Timestamp(6)
  trans_payhead_affecteds  trans_payhead_affecteds[]
  trans_payhead_breakdowns trans_payhead_breakdowns[]
  ref_payhead_type         ref_payhead_type           @relation(fields: [payhead_type_id], references: [payhead_type_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_trans_payhead_list_ref_payhead_type1")

  @@index([payhead_type_id], map: "fk_trans_payhead_list_ref_payhead_type1_idx")
}

model trans_payrolls {
  payroll_id             Int             @id
  employee_id            Int
  start_date             DateTime?       @db.Date
  end_date               DateTime?       @db.Date
  gross_total_amount     Decimal?        @db.Decimal(11, 2)
  deduction_total_amount Decimal?        @db.Decimal(11, 2)
  created_at             DateTime        @db.Timestamp(6)
  updated_at             DateTime        @db.Timestamp(6)
  trans_employees        trans_employees @relation(fields: [employee_id], references: [employee_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_payroll_employees")

  @@index([employee_id], map: "fk_payroll_employees_idx")
}

model trans_privileges {
  priviledge_id  Int            @id
  account_id     Int
  privilege_name String         @default("view") @db.VarChar(30)
  permissions    String?
  trans_accounts trans_accounts @relation(fields: [account_id], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_privilege_accounts")

  @@index([account_id], map: "fk_privilege_accounts_idx")
}

model trans_schedules {
  schedule_id     Int             @id
  employee_id     Int
  day_of_week     String?         @db.VarChar(9)
  time_in         DateTime?       @db.Time(6)
  time_out        DateTime?       @db.Time(6)
  updated_at      DateTime        @db.Timestamp(6)
  trans_employees trans_employees @relation(fields: [employee_id], references: [employee_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_schedule_employees1")

  @@index([employee_id], map: "fk_schedule_employees1_idx")
}

model trans_sessions {
  login_id        Int             @id
  employee_id     Int
  login_date      DateTime?       @db.Date
  token           String?
  trans_employees trans_employees @relation(fields: [employee_id], references: [employee_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_login_employees1")

  @@index([employee_id], map: "fk_login_employees1_idx")
}

model trans_units {
  units_id        Int             @id
  employee_id     Int
  units           Int
  updated_at      DateTime        @db.Timestamp(6)
  trans_employees trans_employees @relation(fields: [employee_id], references: [employee_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_units_employees1")

  @@index([employee_id], map: "fk_units_employees1_idx")
}

model trans_variables {
  variable_id     Int              @id
  variable_name   String           @db.VarChar(50)
  data            Json             @db.Json
  employee_id     Int?
  created_at      DateTime         @db.Timestamp(6)
  updated_at      DateTime         @db.Timestamp(6)
  trans_employees trans_employees? @relation(fields: [employee_id], references: [employee_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_trans_variables_trans_employees1")

  @@index([employee_id], map: "fk_trans_variables_trans_employees1_idx")
}

model users {
  id                Int       @id
  name              String    @db.VarChar(255)
  email             String    @unique(map: "users_email_unique") @db.VarChar(255)
  email_verified_at DateTime? @db.Timestamp(6)
  password          String    @db.VarChar(255)
  remember_token    String?   @db.VarChar(100)
  created_at        DateTime? @db.Timestamp(6)
  updated_at        DateTime? @db.Timestamp(6)
}
